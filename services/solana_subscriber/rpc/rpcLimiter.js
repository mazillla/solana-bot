// services/solana_subscriber/rpc/rpcLimiter.js

// ‚úÖ –ì–û–¢–û–í

/**
 * üß† –≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º token bucket (—Ç–æ–∫–µ–Ω-–±–∞–∫–µ—Ç),
 * –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ RPC-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
 *
 * üîÑ –õ–æ–≥–∏–∫–∞:
 *   - –í –Ω–∞—á–∞–ª–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ (1 —Å–µ–∫—É–Ω–¥–∞) –≤ "–±–∞–∫–µ" maxRequestsPerSec —Ç–æ–∫–µ–Ω–æ–≤.
 *   - –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ removeToken() –∑–∞–±–∏—Ä–∞–µ—Ç 1 —Ç–æ–∫–µ–Ω.
 *   - –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å ‚Äî –∑–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—è–µ—Ç—Å—è (false).
 *   - –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –±–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ –º–∞–∫—Å–∏–º—É–º–∞.
 *
 * üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
 *   - HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (getParsedTransaction)
 *   - WebSocket-—Å–æ–±—ã—Ç–∏–π (onLogs)
 * 
 * üìå –ù–µ–∑–∞–≤–∏—Å–∏–º–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ RPC –∫–ª–∏–µ–Ω—Ç–∞:
 *   - httpLimiter ‚Äî –≤ parseQueue / recovery
 *   - wsLimiter   ‚Äî –≤ onLogsHandler
 */

/**
 * üõ† –°–æ–∑–¥–∞—ë—Ç –ª–∏–º–∏—Ç–µ—Ä —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
 * 
 * @param {number} maxRequestsPerSec - –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
 * @returns {{
*   removeToken: () => boolean,
*   stop: () => void
* }}
*/
export function createLimiter(maxRequestsPerSec) {
 // ü™ô –°–∫–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω–æ–≤ (–∑–∞–ø—Ä–æ—Å–æ–≤) –æ—Å—Ç–∞–ª–æ—Å—å –≤ —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ
 let tokens = maxRequestsPerSec;

 // ‚è± –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –æ–±–Ω—É–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –∏ –≤—ã–¥–∞—ë–º –Ω–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã
 const interval = setInterval(() => {
   tokens = maxRequestsPerSec;
 }, 1000);

 return {
   /**
    * üîÑ –ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞–±—Ä–∞—Ç—å —Ç–æ–∫–µ–Ω (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å).
    * @returns {boolean} - true –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ, false –µ—Å–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω
    */
   removeToken() {
     if (tokens > 0) {
       tokens--;
       return true;
     }
     return false;
   },

   /**
    * üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã RPC).
    */
   stop() {
     clearInterval(interval);
   },
 };
}
