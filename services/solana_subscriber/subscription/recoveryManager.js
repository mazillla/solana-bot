// services/solana_subscriber/subscription/recoveryManager.js

// ‚úÖ –ì–û–¢–û–í

/**
 * –ú–æ–¥—É–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ø–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞–º) –¥–ª—è Solana-–∞–∫–∫–∞—É–Ω—Ç–æ–≤.
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏:
 * - —Å—Ç–∞—Ä—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏ (`subscribeToAccount`)
 * - —Å–±–æ–µ RPC –∏–ª–∏ reconnect-–µ (`resubscribeAll`)
 * - –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ WebSocket (`maybeTriggerRecovery`)
 *
 * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:
 * - –º—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —á–µ—Ä–µ–∑ RPC –º–µ—Ç–æ–¥–æ–º `getSignaturesForAddress`
 * - –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (`maxAgeMs`) –∏–ª–∏ –ø–æ `last_signature`
 * - –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ (limit = 1000), –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –≤—Å—ë
 * - –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ (`enqueueSignature` –∏–ª–∏ `enqueueToPerAccountQueue`)
 *
 * –í—Å–µ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ **–æ—Ç —Å—Ç–∞—Ä–æ–π –∫ –Ω–æ–≤–æ–π**, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å.
 */

import { getSignaturesForAddressWithTimeout } from '../rpc/rpcUtils.js';
import { getAvailableRpc } from '../rpc/rpcPool.js';
import { sharedLogger } from '../../../utils/sharedLogger.js';
import { enqueueSignature } from '../queue/parseQueue.js';
import { enqueueToPerAccountPublishQueue, isPrioritized } from '../queue/perAccountPublishQueueManager.js';
import { getCurrentConfig } from '../config/configLoader.js';


/**
 * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–∏–≥–Ω–∞—Ç—É—Ä—ã) –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.
 *
 * @param {Object} params
 * @param {string} params.chain_id - –ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ü–µ–ø–æ—á–∫–∏ (chain1, chain2 –∏ —Ç.–ø.)
 * @param {string} params.account - –ê–¥—Ä–µ—Å Solana-–∞–∫–∫–∞—É–Ω—Ç–∞ (–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∞)
 * @param {string|null} params.last_signature - –°–∏–≥–Ω–∞—Ç—É—Ä–∞, –¥–æ –∫–æ—Ç–æ—Ä–æ–π (–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –Ω—É–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
 *
 * –ü–æ–≤–µ–¥–µ–Ω–∏–µ:
 * - –µ—Å–ª–∏ last_signature = null ‚Üí –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ (`maxAgeMs`)
 * - –µ—Å–ª–∏ last_signature —É–∫–∞–∑–∞–Ω–∞ ‚Üí –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–¥—ë—Ç –¥–æ –Ω–µ—ë, –Ω–µ –≤–∫–ª—é—á–∞—è –µ—ë —Å–∞–º—É
 */
export async function recoverTransactions({ chain_id, account, last_signature }) {
  /**
   * –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π RPC-–∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.
   * –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –≤—ã—Ö–æ–¥–∏–º.
   */
  const rpc = await getAvailableRpc();
  if (!rpc) {
    try {
      await sharedLogger({
        service: getCurrentConfig().service_name,
        level: 'warn',
        message: {
          type: 'recovery_skipped',
          reason: 'no_available_rpc',
          chain_id,
          account,
        },
      });
    } catch (_) {}
    return;
  }

  /**
   * –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  try {
    await sharedLogger({
      service: getCurrentConfig().service_name,
      level: 'info',
      message: {
        type: 'recovery_started',
        chain_id,
        account,
        rpc_id: rpc.id,
        from: last_signature || 'start',
      },
    });
  } catch (_) {}

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  const allSignatures = [];
  const maxAgeMs = getCurrentConfig().default_history_max_age_ms || 86400000;
  const now = Date.now();

  let before = undefined;
  let keepFetching = true;

  /**
   * üîÅ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä
   * Solana –æ—Ç–¥–∞—ë—Ç —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –æ—Ç –ù–û–í–´–• –∫ –°–¢–ê–†–´–ú (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫),
   * –ø–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–æ—Å—Ç–æ `push`, –∞ –≤ –∫–æ–Ω—Ü–µ ‚Äî `reverse()`.
   */
  while (keepFetching) {
    const options = {
      limit: 1000,
      ...(before ? { before } : {}),
      ...(last_signature ? { until: last_signature } : {}),
    };

    const sigs = await getSignaturesForAddressWithTimeout(rpc, account, options);
    if (!sigs || sigs.length === 0) break;

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ
    const confirmed = sigs.filter(sig => sig.confirmationStatus === 'confirmed');

    for (const sig of confirmed) {
      // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∑–∞–¥–∞–Ω–Ω–æ–π last_signature ‚Üí –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
      if (sig.signature === last_signature) {
        keepFetching = false;
        break;
      }

      // –ï—Å–ª–∏ sig —É—Å—Ç–∞—Ä–µ–ª –ø–æ –≤—Ä–µ–º–µ–Ω–∏ ‚Üí —Ç–æ–∂–µ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º
      if (sig.blockTime && sig.blockTime * 1000 < now - maxAgeMs) {
        keepFetching = false;
        break;
      }

      allSignatures.push(sig);
    }

    // –ï—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –º–µ–Ω—å—à–µ 1000 ‚Äî —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if (sigs.length < 1000) break;

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–µ—â—ë –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)
    before = sigs[sigs.length - 1].signature;
  }

  /**
   * –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ ‚Äî —Ç–µ–ø–µ—Ä—å –æ—Ç –°–¢–ê–†–û–ô –∫ –ù–û–í–û–ô
   */
  allSignatures.reverse();

  /**
   * –ü–æ–º–µ—â–∞–µ–º –∫–∞–∂–¥—É—é —Å–∏–≥–Ω–∞—Ç—É—Ä—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
   */
  for (const sig of allSignatures) {
    const task = {
      chain_id,
      account,
      signature: sig.signature,
      enqueuedAt: Date.now(),
    };

    if (isPrioritized(chain_id, account)) {
      enqueueToPerAccountPublishQueue(task);
    } else {
      enqueueSignature(task);
    }
  }

  /**
   * –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  try {
    await sharedLogger({
      service: getCurrentConfig().service_name,
      level: 'info',
      message: {
        type: 'recovery_queued',
        chain_id,
        account,
        count: allSignatures.length,
      },
    });
  } catch (_) {}
}
