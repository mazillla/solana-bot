// services/solana_subscriber/db/subscriberConfig.js

// ‚úÖ –ì–û–¢–û–í

// üì¶ –ò–º–ø–æ—Ä—Ç –ø—É–ª–∞ PostgreSQL –∏–∑ –º–æ–¥—É–ª—è db.js
import { pool } from './db.js';

// üì¢ –õ–æ–≥–≥–µ—Ä, –æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Redis stream)
import { sharedLogger } from '../../../utils/sharedLogger.js';

// üß† –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ª–æ–≥–æ–≤
import { getCurrentConfig } from '../config/configLoader.js';

/**
 * üì° –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–∞–±–ª–∏—Ü—É `subscriber_config`, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è
 * JSON-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ `solana_subscriber`.
 * 
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ `updated_at DESC`.
 */
export async function getSubscriberConfigFromDb() {
  // üìú SQL-–∑–∞–ø—Ä–æ—Å: –≤—ã–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é (–ø–æ –≤—Ä–µ–º–µ–Ω–∏) –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const query = `
    SELECT 
      rpc_endpoints,
      control_accounts,
      silence_threshold_ms,
      queue_max_length,
      rpc_timeout_ms,
      parse_concurrency,
      parse_queue_max_length,
      max_parse_duration_ms,
      heartbeat_interval_ms,
      default_history_max_age_ms,
      recovery_cooldown_ms,
      http_limit_per_sec,
      ws_limit_per_sec,
      service_name,
      stream_subscription_state,
      heartbeat_stream_key
    FROM subscriber_config
    ORDER BY updated_at DESC
    LIMIT 1;
  `;

  // üì• –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å
  const { rows } = await pool.query(query);

  // ‚ö†Ô∏è –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ‚Äî —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Ñ–∞—Ç–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–æ–π
  if (!rows.length) {
    throw new Error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ subscriber_config');
  }

  // ‚úÖ –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  try {
    await sharedLogger({
      service: getCurrentConfig().service_name,
      level: 'info',
      message: {
        type: 'subscriber_config_loaded',
        preview: {
          updated_keys: Object.keys(rows[0]), // üîç –ª–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–∏ (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π)
        },
      },
    });
  } catch (_) {}

  // üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å)
  return rows[0];
}
