version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - bot_network

  solana_subscriber:
    build: ../services/solana_subscriber
    container_name: solana_subscriber
    restart: always
    env_file:
      - ../config/.env
    volumes:
      - ../utils:/app/utils  # üìå –ü–æ–¥–∫–ª—é—á–∞–µ–º `utils` –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞
    depends_on:
      redis:
        condition: service_started
    networks:
      - bot_network
    healthcheck:  # üìå –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      test: ["CMD", "node", "-e", "console.log('Healthcheck OK')"]
      interval: 10s
      timeout: 5s
      retries: 5

  account_manager:
    build: ../services/account_manager
    container_name: account_manager
    restart: always
    env_file:
      - ../config/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_started
      solana_subscriber:
        condition: service_healthy
    networks:
      - bot_network
    healthcheck:  # üìå –î–æ–±–∞–≤–ª—è–µ–º healthcheck
      test: ["CMD", "node", "-e", "console.log('Healthcheck OK')"]
      interval: 10s
      timeout: 5s
      retries: 5

  log_processor:
    build: ../services/log_processor
    container_name: log_processor
    restart: always
    env_file:
      - ../config/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_started
      solana_subscriber:
        condition: service_healthy
      account_manager:
        condition: service_healthy
    networks:
      - bot_network

  config_server:
    build:
      context: ./services/config_server
    ports:
      - "3001:3001"
    volumes:
      - ./config:/app/config        # –º–æ–Ω—Ç–∏—Ä—É–µ–º config.json
    environment:
      - NODE_ENV=production

  ui:
    build:
      context: ./ui
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    depends_on:
      - config_server

networks:
  bot_network:
    driver: bridge
