// services/solana_subscriber/config/validateConfig.js

/**
 * ‚úÖ –ú–æ–¥—É–ª—å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã subscriber_config.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏, –¥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è config.
 *
 * üí° –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
 * - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–∏–ø–æ–≤
 * - –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
 * - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, parse_concurrency >= 1)
 */

export function validateConfig(config) {
    const errors = [];
  
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –æ–±—ä–µ–∫—Ç
    if (!config || typeof config !== 'object') {
      errors.push('config –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º');
      return { valid: false, errors };
    }
  
    // 2. rpc_endpoints ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π, –º–∞—Å—Å–∏–≤
    if (!Array.isArray(config.rpc_endpoints) || config.rpc_endpoints.length === 0) {
      errors.push('rpc_endpoints –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º');
    }
  
    // 3. control_accounts ‚Äî –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
    if (!Array.isArray(config.control_accounts)) {
      errors.push('control_accounts –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º —Å—Ç—Ä–æ–∫');
    }
  
    // 4. –ß–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —á–∏—Å–ª–æ –∏ –±–æ–ª—å—à–µ –Ω—É–ª—è)
    const numericFields = [
      'silence_threshold_ms',
      'queue_max_length',
      'rpc_timeout_ms',
      'parse_concurrency',
      'max_parse_duration_ms',
      'heartbeat_interval_ms',
      'default_history_max_age_ms',
      'recovery_cooldown_ms',
      'http_limit_per_sec',
      'ws_limit_per_sec',
    ];
  
    for (const key of numericFields) {
      const val = config[key];
      if (typeof val !== 'number' || val < 0 || Number.isNaN(val)) {
        errors.push(`${key} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º >= 0`);
      }
    }
  
    // 5. service_name ‚Äî —Å—Ç—Ä–æ–∫–∞
    if (typeof config.service_name !== 'string' || config.service_name.length === 0) {
      errors.push('service_name –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    }
  
    // 6. stream_subscription_state ‚Äî —Å—Ç—Ä–æ–∫–∞
    if (typeof config.stream_subscription_state !== 'string' || config.stream_subscription_state.length === 0) {
      errors.push('stream_subscription_state –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    }
  
    // 7. heartbeat_stream_key ‚Äî —Å—Ç—Ä–æ–∫–∞
    if (typeof config.heartbeat_stream_key !== 'string' || config.heartbeat_stream_key.length === 0) {
      errors.push('heartbeat_stream_key –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    }
  
    // 8. commitment ‚Äî –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    const allowedCommitments = ['processed', 'confirmed', 'finalized'];
    if (!allowedCommitments.includes(config.commitment)) {
      errors.push(`commitment –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: ${allowedCommitments.join(', ')}`);
    }
  
    return {
      valid: errors.length === 0,
      errors,
    };
  }
  